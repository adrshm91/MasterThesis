#------------------------------------------------------------
# Generated by Simcenter Amesim 2019.1.0 - 81842-80938 2019.
# From "C:/Users/z003zxuz/Documents/Thesis_Code/MasterThesis/amesim/model/Neural_network_control/PIDtunerSpeedControl.ame" system,
# Created: 4/25/2019 10:32 AM
#
# Note: You can copy or modify this file without restriction.
#------------------------------------------------------------



# Initializations

# Import needed modules
import os, sys

if 'ame_apy' not in sys.modules:
   try:
      from ame_apy import *
   except ImportError:
      print 'Unable to import Simcenter Amesim API module.\nCheck the AME environment variable.'

# Get license and initialize Simcenter Amesim Python API
AMEInitAPI()

# Create new "PIDtunerSpeedControl" system
AMECreateCircuit('PIDtunerSpeedControl')

# Add components of 'top circuit'

# Add "piecewiselinear_2" component
AMEAddComponent('piecewiselinear', 'piecewiselinear_2', (171, 593))

# Set "UD00" submodel to "piecewiselinear_2" component
AMEChangeSubmodel('piecewiselinear_2', 'UD00', r'$AME\libsig\submodels')

# Add "ratelimiter" component
AMEAddComponent('ratelimiter', 'ratelimiter', (211, 592))

# Set "RATELIM0" submodel to "ratelimiter" component
AMEChangeSubmodel('ratelimiter', 'RATELIM0', r'$AME\libsig\submodels')

# Add "gain" component
AMEAddComponent('gain', 'gain', (260, 598))

# Set "GA00" submodel to "gain" component
AMEChangeSubmodel('gain', 'GA00', r'$AME\libsig\submodels')

# Add "pidtune" component
AMEAddComponent('pidtune', 'pidtune', (309, 592))

# Set "SIGPIDT0" submodel to "pidtune" component
AMEChangeSubmodel('pidtune', 'SIGPIDT0', r'$AME\libsig\submodels')

# Add "dynamic_cosim_shm_discrete_1" component
AMEAddDynamicComponent('dynamic_cosim_shm_discrete', 'dynamic_cosim_shm_discrete_1', '2,3', (558, 595))

# Add "splitter2p" component
AMEAddComponent('splitter2p', 'splitter2p', (691, 460))

# Set "SPLT0" submodel to "splitter2p" component
AMEChangeSubmodel('splitter2p', 'SPLT0', r'$AME\libsig\submodels')

# Establish connections inside 'top circuit'

# Connect "piecewiselinear_2" and "ratelimiter"
AMEConnectTwoPorts('piecewiselinear_2', 0, 'ratelimiter', 1)

# Connect "ratelimiter" and "gain"
AMEConnectTwoPorts('ratelimiter', 0, 'gain', 1)

# Connect "gain" and "pidtune"
AMEConnectTwoPorts('gain', 0, 'pidtune', 2)

# Connect "pidtune" and "splitter2p" with a line
AMEConnectTwoPortsWithLine('splitter2p', 0, 'pidtune', 0, 'control', ((706, 733), (324, 733)))

# Connect "pidtune" and "dynamic_cosim_shm_discrete_1" with a line
AMEConnectTwoPortsWithLine('pidtune', 1, 'dynamic_cosim_shm_discrete_1', 2, 'control_1', ())

# Connect "dynamic_cosim_shm_discrete_1" and "dynamic_cosim_shm_discrete_1" with a line
AMEConnectTwoPortsWithLine('dynamic_cosim_shm_discrete_1', 0, 'dynamic_cosim_shm_discrete_1', 0, 'control_7', ((666, 627), (666, 683), (521, 683), (521, 633)))

# Connect "dynamic_cosim_shm_discrete_1" and "splitter2p" with a line
AMEConnectTwoPortsWithLine('dynamic_cosim_shm_discrete_1', 1, 'splitter2p', 2, 'control_5', ((670, 614), (670, 475)))

# Connect "dynamic_cosim_shm_discrete_1" and "splitter2p" with a line
AMEConnectTwoPortsWithLine('splitter2p', 1, 'dynamic_cosim_shm_discrete_1', 3, 'control_6', ((706, 421), (426, 421), (426, 620)))

# Connect "dynamic_cosim_shm_discrete_1" and "dynamic_cosim_shm_discrete_1" with a line
AMEConnectTwoPortsWithLine('dynamic_cosim_shm_discrete_1', 4, 'dynamic_cosim_shm_discrete_1', 0, 'control_7', ((666, 627), (666, 683), (521, 683), (521, 633)))

# Add global parameter
AMEAddGlobalParameter('target_rpm', 'speed', 'ame_real_parameter', '125', '', '', '', 'rpm',None,0)

# Add global parameter
AMEAddGlobalParameter('target_acc', 'acceleration', 'ame_real_parameter', '125/0.06', '', '', '', 'rpm/s',None,1)

# Set 'piecewiselinear_2' parameters
AMESetParameterValue('tstart@piecewiselinear_2', '0.00000000000000e+00')
AMESetParameterValue('start1@piecewiselinear_2', '0.00000000000000e+00')
AMESetParameterValue('end1@piecewiselinear_2', 'target_rpm')
AMESetParameterValue('t1@piecewiselinear_2', 'target_rpm/target_acc')
AMESetParameterValue('start2@piecewiselinear_2', 'target_rpm')
AMESetParameterValue('end2@piecewiselinear_2', 'target_rpm')
AMESetParameterValue('t2@piecewiselinear_2', '2.00000000000000e-01')
AMESetParameterValue('start3@piecewiselinear_2', 'target_rpm')
AMESetParameterValue('end3@piecewiselinear_2', '0.00000000000000e+00')
AMESetParameterValue('t3@piecewiselinear_2', 'target_rpm/target_acc')
AMESetParameterValue('start4@piecewiselinear_2', '0.00000000000000e+00')
AMESetParameterValue('end4@piecewiselinear_2', '0.00000000000000e+00')
AMESetParameterValue('t4@piecewiselinear_2', '2.00000000000000e-01')
AMESetParameterValue('start5@piecewiselinear_2', '0.00000000000000e+00')
AMESetParameterValue('end5@piecewiselinear_2', '0.00000000000000e+00')
AMESetParameterValue('t5@piecewiselinear_2', '3.00000000000000e+00')
AMESetParameterValue('start6@piecewiselinear_2', '0.00000000000000e+00')
AMESetParameterValue('end6@piecewiselinear_2', '0.00000000000000e+00')
AMESetParameterValue('t6@piecewiselinear_2', '3.00000000000000e+00')
AMESetParameterValue('start7@piecewiselinear_2', '0.00000000000000e+00')
AMESetParameterValue('end7@piecewiselinear_2', '0.00000000000000e+00')
AMESetParameterValue('t7@piecewiselinear_2', '3.00000000000000e+00')
AMESetParameterValue('start8@piecewiselinear_2', '0.00000000000000e+00')
AMESetParameterValue('end8@piecewiselinear_2', '0.00000000000000e+00')
AMESetParameterValue('t8@piecewiselinear_2', '3.00000000000000e+00')
AMESetParameterValue('nstages@piecewiselinear_2', '4')
AMESetParameterValue('iscyclic@piecewiselinear_2', '2')

# Set 'ratelimiter' parameters
AMESetParameterValue('out@ratelimiter', '0.00000000000000e+00')
AMESetParameterValue('up0GEN@ratelimiter', '0.00000000000000e+00')
AMESetParameterValue('low0GEN@ratelimiter', '0.00000000000000e+00')
AMESetParameterValue('tau@ratelimiter', '1.00000000000000e-04')
AMESetParameterValue('up@ratelimiter', '200/0.06')
AMESetParameterValue('low@ratelimiter', '-200/0.06')
AMESetParameterValue('initmode@ratelimiter', '1')

# Set 'gain' parameters
AMESetParameterValue('k0GEN@gain', '0.00000000000000e+00')
AMESetParameterValue('k@gain', '1.00000000000000e+00')

# Set 'pidtune' parameters
AMESetParameterValue('outputtype@pidtune', '1')
AMESetParameterValue('ipart@pidtune', '0.00000000000000e+00')
AMESetParameterValue('u0@pidtune', '0.00000000000000e+00')
AMESetParameterValue('outlim0GEN@pidtune', '0.00000000000000e+00')
AMESetParameterValue('antiwind0GEN@pidtune', '0.00000000000000e+00')
AMESetParameterValue('Kp0GEN@pidtune', '0.00000000000000e+00')
AMESetParameterValue('Ki0GEN@pidtune', '0.00000000000000e+00')
AMESetParameterValue('Kd0GEN@pidtune', '0.00000000000000e+00')
AMESetParameterValue('tau0GEN@pidtune', '0.00000000000000e+00')
AMESetParameterValue('outmin0GEN@pidtune', '0.00000000000000e+00')
AMESetParameterValue('outmax0GEN@pidtune', '0.00000000000000e+00')
AMESetParameterValue('Ks0GEN@pidtune', '0.00000000000000e+00')
AMESetParameterValue('hyst0GEN@pidtune', '0.00000000000000e+00')
AMESetParameterValue('Kp@pidtune', '3.34122000000000e-02')
AMESetParameterValue('Ki@pidtune', '7.06984000000000e+00')
AMESetParameterValue('Kd@pidtune', '6.19432000000000e-04')
AMESetParameterValue('tau@pidtune', '1.85390908255000e-05')
AMESetParameterValue('outmin@pidtune', '-1.00000000000000e+30')
AMESetParameterValue('outmax@pidtune', '1.00000000000000e+30')
AMESetParameterValue('Ks@pidtune', '7.06984000000000e+00')
AMESetParameterValue('hyst@pidtune', '1.00000000000000e-01')
AMESetParameterValue('linmode@pidtune', '1')
AMESetParameterValue('outlim@pidtune', '1')
AMESetParameterValue('antiwind@pidtune', '3')

# Set 'dynamic_cosim_shm_discrete_1' parameters
AMESetParameterValue('p1__outputs@dynamic_cosim_shm_discrete_1', '0.00000000000000e+00')
AMESetParameterValue('p2__outputs@dynamic_cosim_shm_discrete_1', '0.00000000000000e+00')
AMESetParameterValue('samptime@dynamic_cosim_shm_discrete_1', '1.00000000000000e-03')
AMESetParameterValue('mode@dynamic_cosim_shm_discrete_1', '2')
AMESetParameterValue('shmName@dynamic_cosim_shm_discrete_1', 'shm_0')

# Generate code
AMEGenerateCode()

# Add 'Save next' and 'Lock State' flags

# Set run parameters
AMESetRunParameter('start_time_s', '0')
AMESetRunParameter('stop_time_s', '1.4')
AMESetRunParameter('interval_s', '0.0001')
AMESetRunParameter('fixed_step_s', '0.001')
AMESetRunParameter('fixed_order', '1')
AMESetRunParameter('max_time_step_s', '1e+30')
AMESetRunParameter('tolerance', '1e-07')
AMESetRunParameter('integ_method', '0')
AMESetRunParameter('fixed_integ_method', '0')
AMESetRunParameter('error_type', '0')
AMESetRunParameter('solver_type', '0')
AMESetRunParameter('disable_optimized_solver', '0')
AMESetRunParameter('minimal_discontinuity_handling', '0')
AMESetRunParameter('simulation_mode', '2')
AMESetRunParameter('discontinuity_printout', '0')
AMESetRunParameter('activity_calculation', '0')
AMESetRunParameter('power_calculation', '0')
AMESetRunParameter('energy_calculation', '0')
AMESetRunParameter('hold_inputs_constant', '0')
AMESetRunParameter('lock_non_propagating_state', '0')
AMESetRunParameter('diagnotics', '0')
AMESetRunParameter('continuation_run', '0')

# Add text items
AMETextInsertItem('<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd">\n<html><head><meta name="qrichtext" content="1" /><style type="text/css">\np, li { white-space: pre-wrap; }\n</style></head><body style=" font-family:\'MS Shell Dlg 2\'; font-size:8pt; font-weight:400; font-style:normal;">\n<p align="center" style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" color:#000000;">speed</span></p>\n<p align="center" style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" color:#000000;">target [rpm]</span></p></body></html>', (202, 625), 'ame_text_left');
AMETextInsertItem('<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd">\n<html><head><meta name="qrichtext" content="1" /><style type="text/css">\np, li { white-space: pre-wrap; }\n</style></head><body style=" font-family:\'MS Shell Dlg 2\'; font-size:8pt; font-weight:400; font-style:normal;">\n<p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:10pt; font-weight:600; color:#000000;">Closed-Loop model</span></p></body></html>', (531, 546), 'ame_text_left');
AMETextInsertItem('<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd">\n<html><head><meta name="qrichtext" content="1" /><style type="text/css">\np, li { white-space: pre-wrap; }\n</style></head><body style=" font-family:\'MS Shell Dlg 2\'; font-size:8pt; font-weight:400; font-style:normal;">\n<p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:18pt; font-weight:600; color:#000000;">Speed control of a drive system with the PID tuner</span></p></body></html>', (31, 8), 'ame_text_left');
AMETextInsertItem('<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd">\n<html><head><meta name="qrichtext" content="1" /><style type="text/css">\np, li { white-space: pre-wrap; }\n</style></head><body style=" font-family:\'MS Shell Dlg 2\'; font-size:8pt; font-weight:400; font-style:normal;">\n<p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" color:#000000;">This demo illustrates how to calibrate a speed control loop for an electro-mechanical system with help of the PID tuner</span></p></body></html>', (31, 46), 'ame_text_left');
AMETextInsertItem('<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd">\n<html><head><meta name="qrichtext" content="1" /><style type="text/css">\np, li { white-space: pre-wrap; }\n</style></head><body style=" font-family:\'MS Shell Dlg 2\'; font-size:8pt; font-weight:400; font-style:normal;">\n<p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" color:#000000;">Speed(t+1)</span></p></body></html>', (596, 591), 'ame_text_left');
AMETextInsertItem('<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd">\n<html><head><meta name="qrichtext" content="1" /><style type="text/css">\np, li { white-space: pre-wrap; }\n</style></head><body style=" font-family:\'MS Shell Dlg 2\'; font-size:8pt; font-weight:400; font-style:normal;">\n<p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" color:#000000;">Torque(t+1)</span></p></body></html>', (594, 632), 'ame_text_left');
AMETextInsertItem('<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd">\n<html><head><meta name="qrichtext" content="1" /><style type="text/css">\np, li { white-space: pre-wrap; }\n</style></head><body style=" font-family:\'MS Shell Dlg 2\'; font-size:8pt; font-weight:400; font-style:normal;">\n<p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" color:#000000;">Current(t)</span></p></body></html>', (500, 579), 'ame_text_left');
AMETextInsertItem('<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd">\n<html><head><meta name="qrichtext" content="1" /><style type="text/css">\np, li { white-space: pre-wrap; }\n</style></head><body style=" font-family:\'MS Shell Dlg 2\'; font-size:8pt; font-weight:400; font-style:normal;">\n<p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" color:#000000;">Speed(t)</span></p></body></html>', (507, 603), 'ame_text_left');
AMETextInsertItem('<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd">\n<html><head><meta name="qrichtext" content="1" /><style type="text/css">\np, li { white-space: pre-wrap; }\n</style></head><body style=" font-family:\'MS Shell Dlg 2\'; font-size:8pt; font-weight:400; font-style:normal;">\n<p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" color:#000000;">Torque(t)</span></p></body></html>', (505, 643), 'ame_text_left');

# Save 'PIDtunerSpeedControl.ame' system
AMECloseCircuit(True)

# Finalize script

# Return license and close Simcenter Amesim Python API
AMECloseAPI(False)
